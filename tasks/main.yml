---
- name: "Choose platform based task"
  include_tasks: "{{ platform }}"
  with_first_found:
    - "system/{{ ansible_os_family }}.yml"
    - "system/not-supported.yml"
  loop_control:
    loop_var: platform

- name: install pip packages
  pip:
    name: "{{ item }}"
  with_items:
    - lxml
    - beautifulsoup4
    - boto3
  become: True

- name: create hybris-tools directory
  file:
    path: "{{ htools.hybris_tools_path }}"
    owner: root
    group: root
    mode: 0755
    state: directory
  become: True

- name: copy hybris-preinstall config file
  template:
    src: h-tools.j2
    dest: /etc/default/h-tools
    owner: root
    group: root
    mode: 0600
    backup: True
  become: True

- name: copy hybris-preinstall files
  copy:
    src: "{{ role_path }}/files/{{ item.value.path }}"
    dest: "/{{ item.value.path }}"
    owner: "{{ item.value.owner }}"
    group: "{{ item.value.group }}"
    mode: "{{ item.value.mode | int }}"
  with_dict: "{{ htools_files }}"
  become: True

- name: run healthcheck
  include_tasks: yhealthcheck.yml

- name: prepare paths
  file:
    path: "{{ hypath_item }}"
    state: directory
    owner: "{{ htools.username }}"
    group: "{{ htools.groupname }}"
    recurse: yes
  loop_control:
    loop_var: hypath_item
  with_items:
    - "{{ htools.hybris_path }}/bin/platform/tomcat/bin"
  become: True

- name: prepare hybris service
  template:
    src: hybrisserver.sh.j2
    dest: "{{ htools.hybris_path }}/bin/platform/hybrisserver.sh"
    owner: "{{ hybrisd_service.username }}"
    group: "{{ hybrisd_service.groupname }}"
    force: no
  become: True

- name: Make sure h-up may launch successfully
  command: "{{ htools.hybris_tools_path }}/h-up --help"
  register: command_hu_result
  failed_when: command_hu_result.rc != 0
  changed_when: false
  become: True

- name: adding selinux support
  include_tasks: selinux-support.yml
